{"version":3,"sources":["Component/TodoItem/TodoItem.js","Component/TodosList/TodosList.js","Component/Header/Header.js","Component/InputTodo/InputTodo.js","Component/TodoContainer/TodoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","alert","this","props","x","id","completed","className","type","checked","onChange","changed","style","color","opacity","textDecoration","title","onClick","delete","Component","TodosList","todos","map","changeHandler","deleted","Header","prevProps","prevState","Math","floor","random","headerShow","document","getElementById","console","log","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","todoHandler","onSubmit","placeholder","input","maxLength","TodoContainer","show","todoChangeHandler","todo","deleteHandler","axios","then","response","filter","AddTodoHandler","post","data","get","TodoApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.291eb297.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoItem.css';\r\n\r\nclass TodoItem extends Component {\r\n   // The componentWillUnmount() method\r\n   componentWillUnmount() {\r\n      alert(\"This todo will be deleted!\");\r\n   }\r\n\r\n   render() {\r\n      const { id, completed } = this.props.x\r\n      const completedStyle = {\r\n         color: \"#d35e0f\",\r\n         opacity: 0.4,\r\n         textDecoration: \"line-through\"\r\n   }\r\n\r\n      return (\r\n         <div>\r\n            <li className='todoItem'>\r\n             <input \r\n                className='inputCheckbox'\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={() => this.props.changed(id)} />\r\n                <span style={completed ? completedStyle : null}>\r\n                   {this.props.x.title}\r\n                </span>\r\n             <button\r\n               onClick={() => this.props.delete(this.props.x.id)} >Delete</button>\r\n            </li>\r\n         </div>        \r\n      )     \r\n   }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\n\r\nclass TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(x => (\r\n                    <TodoItem \r\n                        key={x.id} \r\n                        x={x}\r\n                        changed={this.props.changeHandler}\r\n                        delete={this.props.deleted} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList;","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n\r\n//The componentDidUpdate() method\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let x = Math.floor(Math.random() * 256)\r\n        let y = Math.floor(Math.random() * 256)\r\n        let z = Math.floor(Math.random() * 256)\r\n        let color = \"rgb(\" + x + ',' + y + ',' + z + \")\";\r\n        if( prevProps.headerShow !== this.props.headerShow ) {\r\n            document.getElementById('headerTodo').style.color = color;\r\n            console.log('props change');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className='containerHeader'>\r\n                    <h1 id=\"headerTodo\">Simple Todo App</h1>\r\n                    <p>Add to-dos items through the input field</p>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './InputTodo.css';\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log('works', e)\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.todoHandler(this.state.title)\r\n        this.setState({\r\n            title: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <input \r\n                        className='inputText'\r\n                        type='text' \r\n                        placeholder='Enter new todo' \r\n                        value={this.state.input}\r\n                        name='title'\r\n                        onChange={this.onChange}\r\n                        maxLength='100'\r\n                        \r\n                         />\r\n                    <input \r\n                        type='submit' \r\n                        value='Add Todo'\r\n                        className='submitBtn'  />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo;","import React, { Component } from 'react';\r\nimport TodosList from '../TodosList/TodosList';\r\nimport Header from '../Header/Header';\r\nimport InputTodo from '../InputTodo/InputTodo';\r\nimport axios from 'axios';\r\n\r\nclass TodoContainer extends Component {\r\n    state = {\r\n        todos: [ ],\r\n        show: false\r\n      }\r\n    \r\n      todoChangeHandler = (id) => {\r\n        this.setState( {\r\n          todo: this.state.todos.map( x => {\r\n              if(x.id === id) {\r\n                x.completed = !x.completed\r\n              }\r\n              return x;\r\n            }),\r\n            show: !this.state.show\r\n        });\r\n      };\r\n// Making a Delete Request\r\n      deleteHandler = (id) => {\r\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n        .then(response => this.setState({\r\n          todos: [\r\n            ...this.state.todos.filter(x => {\r\n              return x.id !== id;\r\n            })\r\n          ]\r\n        }) \r\n      )\r\n        \r\n        console.log('works', id);\r\n      }\r\n// Making a POST request     \r\n      AddTodoHandler = (title) => {\r\n      axios.post('https://jsonplaceholder.typicode.com/posts',{\r\n        title: title,\r\n        completed: false\r\n      })\r\n      .then(response => this.setState({\r\n        todos: [...this.state.todos, response.data]\r\n      }) )\r\n        }\r\n// Making a GET request\r\n    componentDidMount() {\r\n      axios.get('https://jsonplaceholder.typicode.com/todos?_limit=15')\r\n        .then(response => this.setState({todos: response.data}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header\r\n                  headerShow={this.state.show} />\r\n                <InputTodo\r\n                  todoHandler={this.AddTodoHandler} />\r\n                <TodosList \r\n                  todos={this.state.todos}\r\n                  changeHandler={this.todoChangeHandler}\r\n                  deleted={this.deleteHandler} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n        \r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\nimport TodoContainer from './Component/TodoContainer/TodoContainer';\nimport './App.css';\n\nclass TodoApp extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <TodoContainer />\n      </div>\n    )\n  }\n}\n\nexport default TodoApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}