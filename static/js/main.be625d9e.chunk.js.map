{"version":3,"sources":["Component/TodoItem/TodoItem.js","Component/TodosList/TodosList.js","Component/Header/Header.js","Component/InputTodo/InputTodo.js","Component/TodoContainer/TodoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["todoItem","props","x","id","completed","className","type","checked","onChange","changed","style","color","opacity","textDecoration","title","date","toLocaleDateString","onClick","delete","TodosList","this","todos","map","changeHandler","deleted","Component","header","InputTodo","state","Date","e","setState","target","name","value","console","log","handleSubmit","preventDefault","todoHandler","onSubmit","placeholder","input","maxLength","required","TodoContainer","Math","floor","random","todoChangeHandler","todo","deleteHandler","filter","AddTodoHandler","newTodo","TodoApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be625d9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TodoItem.css';\r\n\r\nconst todoItem = props => {\r\n   const { id, completed } = props.x\r\n   const completedStyle = {\r\n      color: \"#d35e0f\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\"\r\n   }\r\n    return (\r\n        <div>\r\n           <li className='todoItem'>\r\n            <input \r\n               className='inputCheckbox'\r\n               type=\"checkbox\"\r\n               checked={completed}\r\n               onChange={() => props.changed(id)} />\r\n               <span style={completed ? completedStyle : null}>\r\n                  {props.x.title}\r\n                  <span className='date'>{props.x.date.toLocaleDateString()}</span>\r\n               </span>\r\n            \r\n            <button\r\n              onClick={() => props.delete(props.x.id)} >Delete</button>\r\n            \r\n           </li>\r\n        </div>        \r\n   )     \r\n}\r\n\r\nexport default todoItem;","import React, { Component } from 'react';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\n\r\nclass TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(x => (\r\n                    <TodoItem \r\n                        key={x.id} \r\n                        x={x}\r\n                        changed={this.props.changeHandler}\r\n                        delete={this.props.deleted} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList;","import React from 'react';\r\nimport './Header.css';\r\n\r\nconst header = () => {\r\n    return (\r\n        <header>\r\n            <div className='containerHeader'>\r\n                <h1>Simple Todo App</h1>\r\n                <p>Add to-dos items through the input field</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default header;","import React, { Component } from 'react';\r\nimport './InputTodo.css';\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: '',\r\n        date: new Date()\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log('works', e)\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.todoHandler(this.state.title)\r\n        this.setState({\r\n            title: '',\r\n            date: new Date()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <input \r\n                        className='inputText'\r\n                        type='text' \r\n                        placeholder='Enter new todo' \r\n                        value={this.state.input}\r\n                        name='title'\r\n                        onChange={this.onChange}\r\n                        maxLength='100'\r\n                        required\r\n                         />\r\n                    <input \r\n                        className='inputDate'\r\n                        name=\"date\" \r\n                        type=\"date\" \r\n                        value={this.state.date}\r\n                        onChange={this.onChange}\r\n                        required\r\n                         />\r\n                    <input \r\n                        type='submit' \r\n                        value='Add Todo'\r\n                        className='submitBtn'  />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo;","import React, { Component } from 'react';\r\nimport TodosList from '../TodosList/TodosList';\r\nimport Header from '../Header/Header';\r\nimport InputTodo from '../InputTodo/InputTodo';\r\n\r\nclass TodoContainer extends Component {\r\n    state = {\r\n        todos: [\r\n            { id: Math.floor(Math.random() * 1000), title: 'Simple App Todo', date: new Date(), completed: false },\r\n        ] \r\n      }\r\n    \r\n      todoChangeHandler = (id) => {\r\n        this.setState( {\r\n          todo: this.state.todos.map( x => {\r\n              if(x.id === id) {\r\n                x.completed = !x.completed\r\n              }\r\n              return x;\r\n            }),\r\n        });\r\n      };\r\n\r\n      deleteHandler = (id) => {\r\n        this.setState({\r\n          todos: [\r\n            ...this.state.todos.filter(x => {\r\n              return x.id !== id;\r\n            })\r\n          ]\r\n        })\r\n        console.log('works', id);\r\n      }\r\n     \r\n      AddTodoHandler = (title) => {\r\n      const newTodo = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        title: title,\r\n        date: new Date(),\r\n        completed: false\r\n      }\r\n      this.setState({\r\n        todos: [...this.state.todos, newTodo]\r\n      })\r\n        }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <InputTodo\r\n                  todoHandler={this.AddTodoHandler} />\r\n                <TodosList \r\n                  todos={this.state.todos}\r\n                  changeHandler={this.todoChangeHandler}\r\n                  deleted={this.deleteHandler} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n        \r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\nimport TodoContainer from './Component/TodoContainer/TodoContainer';\nimport './App.css';\n\nclass TodoApp extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <TodoContainer />\n      </div>\n    )\n  }\n}\n\nexport default TodoApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}